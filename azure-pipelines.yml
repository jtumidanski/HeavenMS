# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - shared/*
    - parent/*
    - engine/*
    - script/*

resources:
  repositories:
    - repository: AppCore # The name used to reference this repository in the checkout step
      type: github
      endpoint: jtumidanski
      name: jtumidanski/app-core
      trigger:
        - main
    - repository: self

stages:
- stage: Build
  displayName: Build
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'macos-latest'
    steps:
        - checkout: AppCore
        - task: Maven@3
          inputs:
            mavenPomFile: 'app-core/pom.xml'
            mavenOptions: '-Xmx3072m'
            publishJUnitResults: false
            options: '-DskipTests'
            goals: 'install'
        - checkout: self
        - task: Maven@3
          inputs:
            mavenPomFile: 'HeavenMS/pom.xml'
            mavenOptions: '-Xmx3072m'
            publishJUnitResults: false
            options: '-DskipTests'
            goals: 'install'
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Pipeline.Workspace)'
            artifact: 'solution-jar'
            publishLocation: 'pipeline'
  - job: BuildContainer
    displayName: Build Container
    pool:
      vmImage: 'ubuntu-latest'
      demands:
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'solution-jar'
          targetPath: '$(Pipeline.Workspace)'
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)